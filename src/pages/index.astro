---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import Card from '../components/Card.astro';
---

<Layout title="Domigraphics.">
	<main role="main" class="app">
		<Navigation />

		<section class="main-section" id="projects">
			<div class="projects-container">
				<div class="projects-info">
					<h3>Devs in Videos</h3>
					<p>Projects that were built based on videos from other developers. Of course a bit of tweaking, especially outdated videos.</p>
				</div>
				<div class="projects-cards">					
					<Card image="https://media.discordapp.net/attachments/1059982570051350608/1071170782908129502/image.png"
						title="Power Bi Project"
						body="A walkthrough of a full project using Power Bi and using information based on spreadsheet."
						url="https://github.com/gongchangco/devs_in_videos/tree/main/power-bi-project" 
					/>
				
					<Card image="https://images.unsplash.com/photo-1624628639856-100bf817fd35?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8M2QlMjBpbWFnZXxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=600&q=60"
						title="React GraphQL Blog"
						body="Using Next.js which is a React framework + a headless CMS like GraphCMS to query data easily with GraphQL."
						url="https://github.com/gongchangco/devs_in_videos/tree/main/react-graphql-blog"
					/>

					<Card image="https://media.discordapp.net/attachments/1059982570051350608/1075158123679072386/image.png"
						title="Vue TailwindCSS Blog"
						body="Build a blog using Vue.js + TailwindCSS and a database called Supabase."
						url="https://github.com/gongchangco/devs_in_videos/tree/main/vue-tailwindcss-blog"
					/>
				</div>

				<div class="projects-info">
					<h3>CSS Layouts</h3>
					<p>I have a creative mind, and I like to build CSS layouts.</p>
				</div>
				<div class="projects-cards">
					<Card image="https://media.discordapp.net/attachments/1059982570051350608/1073338635010707576/image.png"
						title="NexusGen"
						body="A technology-themed CSS template. Currently in the prototype stage using a wireframe tool called Penpot."
						url="https://github.com/gongchangco/nexusgen-astro"
					/>
				</div>

				<div class="projects-info">
					<h3>Bare Bone Templates</h3>
					<p>These are bare bone templates of the work I do. Without the important personal information.</p>
				</div>

			</div>
		</section>

		<section class="main-section" id="about">
			<div class="py-16">
				<div class="about-container">
					<div class="about-landing">
						<div class="about-image">
							<img src="https://images.unsplash.com/photo-1624628639856-100bf817fd35?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8M2QlMjBpbWFnZXxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=600&q=60" alt="image" loading="lazy">
						</div>
						<div class="about-info">
							<h2>About Section...</h2>
							<p class="mt-6 text-gray-600">
								I love to code and automate tasks. There are so many programming languages and web frameworks/apps to choose from that I want to try them all. I have experience with Java, ReactJS, Angular, WordPress, Bootstrap, Node.js, etc.
								Frontend-wise, I do know basic HTML, CSS, and JavaScript. I also have basic knowledge on frameworks such as ReactJS, Tailwind CSS, WordPress, and AngularJS.
							</p>
						</div>
					
					</div>
				</div>
			</div>
		</section>

		<section class="main-section" id="contact">
			<div class="relative py-3 sm:max-w-xl sm:mx-auto">
				<div class="absolute inset-0 bg-green-400 shadow-lg transform -skew-y6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl"></div>
				
				<div class="contact-card">
					<div class="max-w-md mx-auto">
						<div class="contact-intro">
							<h1>Contact Me.</h1>
							<p class="mt-3">
								Interested in opportunities - especially ambitious or large projects. Don't hesitate to contact me.
							</p>
							<hr class="mt-3 divide-gray-500">
						</div>

						<div class="divide-y divide-gray-200">
							<form class="contact-form">
								<label class="contact-label" for="grid-first-name">
									Name <span class="text-red-500">*</span>
								</label>
								<input required class="contact-input" id="grid-first-name" type="text">

								<label class="contact-label" for="grid-first-name">
									Email <span class="text-red-500">*</span>
								</label>
								<input required class="contact-input" id="grid-first-name" type="email">

								<label class="contact-label" for="grid-first-name">
									Message <span class="text-red-500">*</span>
								</label>
								<textarea required class="contact-message" placeholder="Your message..."></textarea>

								<div class="flex items-end justify-end">
									<button class="contact-button">Send</button>
								</div>
							</form>
						</div>
					</div>
				</div>
			</div>
		</section>

		<section class="main-section" id="home">
			<div class="home-container">
				<div class="home-landing">
					<h1>Home Section...</h1>
					<p>Welcome Explaination...</p>
				</div>
				<div class="lg:max-w-lg lg:w-full md:w-1/2 w-5/6">
					<img class="object-cover object-center rounded" alt="sample" src="https://dummyimage.com/720x600/edf2f7/a5afbd">
				</div>
			</div>
		</section>

	</main>	
</Layout>

<style>
	.main-section {
		@apply text-gray-700;
		height: auto;
	}

	#home {
		background: linear-gradient(135deg, rgba(232, 208, 136, 1) 0%, rgba(240, 166, 87, 1) 100%);
	}

	#home h3::before {
		content: "{ ";
	}

	#home h3::after {
		content: " }";
	}

	#home h1 {
		@apply sm:text-4xl text-3xl mb-4 font-medium text-gray-900;
	}

	#home p {
		@apply mb-8 leading-relaxed;
	}

	.home-container {
		@apply container mx-auto flex px-5 py-24 md:flex-row flex-col items-center;
	}

	.home-landing {
		@apply lg:flex-grow md:w-1/2 lg:pr-24 md:pr-16 flex flex-col md:items-start md:text-left mb-16 md:mb-0 items-center text-center;
	}

	#projects {
		background: linear-gradient(135deg, rgba(71,164,180,1) 0%, rgba(90,130,191,1) 100%);
	}

	#projects h3 {
		@apply sm:text-3xl text-xl font-medium text-slate-800 mb-3;
	}

	.projects-container {
		@apply container px-5 py-5 mx-auto;
	}

	.projects-info {
		@apply flex flex-col text-left w-full mb-5 mt-10;
	}

	.projects-cards {
		@apply flex flex-row flex-wrap -m-4;
	}

	#about {
		background: linear-gradient(135deg, rgba(224,178,98,1) 0%, rgba(219,123,166,1) 100%);
	}

	.about-container {
		@apply container m-auto px-6 text-gray-600 md:px-12 xl:px-6;
	}

	.about-landing {
		@apply space-y-6 md:space-y-0 md:flex md:gap-6 lg:items-center lg:gap-12;
	}

	.about-image {
		@apply md:w-5/12 lg:w-5/12 shadow-xl hover:scale-105 transition-all duration-500;
	}

	.about-info {
		@apply md:w-7/12 lg:w-5/12;
	}

	#about h2 {
		@apply text-2xl text-gray-900 font-bold md:text-4xl;
	}

	#contact {
		@apply min-h-screen py-6 flex flex-col justify-center sm:py-12;
		background: linear-gradient(135deg, rgba(90,130,191,1) 0%, rgba(120,128,188,1) 58%, rgba(141,127,185,1) 100%);
	}

	#contact h1 {
		@apply text-3xl font-extrabold;
	}

	.contact-card {
		@apply relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20;
	}

	.contact-form {
		@apply pt-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7 -mb-8;
	}

	.contact-label {
		@apply block uppercase tracking-wide text-gray-700 text-sm font-bold mb-2;
	}

	.contact-input {
		@apply appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white;
	}

	.contact-message {
		@apply resize-y py-3 px-4 border focus:outline-none rounded-md w-full bg-gray-200;
	}

	.contact-button {
		@apply bg-blue-500 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded shadow-md w-full;
	}
</style>

<script is:inline>
	(function() {
		var app = {
			routes: {
				projects: {
					rendered: () => app.preventScroll()
				},
				about: {
					rendered: () => app.preventScroll()
				},
				contact: {
					rendered: () => app.preventScroll()
				},
				'': {
					rendered: () => app.preventScroll()
				}
			},
			default: '',
			preventScroll: () => {
				document.querySelector('html').scrollTop = 0;
				document.querySelector('body').scrollTop = 0;
			},
			routeChange: function() {
				this.routeID = location.hash.slice(1);
				this.route = this.routes[this.routeID];
				this.routeElem = document.getElementById(this.routeID);
				this.route.rendered();
			},
			init: function() {
				window.addEventListener('hashchange', this.routeChange.bind(this));
				if (!location.hash) location.hash = this.default;
				else this.routeChange();
			}
		};
		window.app = app;
	})();

	app.init();
</script>